/**
 * @file Firestore Security Rules
 * @core-philosophy This ruleset enforces a simple authentication check: only signed-in users can read or write data. There are no ownership or role-based restrictions in this initial prototype.
 * @data-structure The data is organized into a top-level `tambola_games` collection, with each game session document containing a subcollection `called_numbers`.
 * @key-security-decisions No ownership checks are enforced. All signed-in users can access and modify all game data.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the user is signed in.
     * @returns {boolean} True if the user is signed in, false otherwise.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Rules for the `tambola_games` collection.
     * @path /tambola_games/{gameId}
     * @allow (create) A signed-in user can create a new game session.
     * @deny (create) An anonymous user cannot create a new game session.
     * @principle Allows any signed-in user to read and write game data.
     */
    match /tambola_games/{gameId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Rules for the `called_numbers` subcollection within a `tambola_games` document.
     * @path /tambola_games/{gameId}/called_numbers/{numberId}
     * @allow (create) A signed-in user can add a new called number to a game session.
     * @deny (create) An anonymous user cannot add a new called number to a game session.
     * @principle Allows any signed-in user to manage called numbers for any game.
     */
    match /tambola_games/{gameId}/called_numbers/{numberId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }
  }
}