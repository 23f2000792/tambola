/**
 * @file Firestore Security Rules for Tambola Game
 * @core_philosophy This ruleset allows any authenticated user to read and write Tambola game data.
 * There is no concept of game ownership or roles, so any logged-in user can participate in any game.
 * Anonymous authentication is enabled, meaning unauthenticated users cannot participate.
 * @data_structure Tambola games are stored in the `/tambola_games/{gameId}` collection, and called numbers are stored in the `/tambola_games/{gameId}/called_numbers/{numberId}` subcollection.
 * @key_security_decisions Public read/write access is granted to authenticated users.
 * @denormalization_for_authorization Not applicable since there are no roles or specific ownership.
 * @structural_segregation Not applicable.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any authenticated user to read and write Tambola game data.
     * @path /tambola_games/{gameId}
     * @allow (read, write) If the user is authenticated.
     * @deny (read, write) If the user is not authenticated.
     * @principle Allows authenticated users to read and write game data.
     */
    match /tambola_games/{gameId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write called numbers for a specific Tambola game.
     * @path /tambola_games/{gameId}/called_numbers/{numberId}
     * @allow (read, write) If the user is authenticated.
     * @deny (read, write) If the user is not authenticated.
     * @principle Allows authenticated users to manage called numbers within a game.
     */
    match /tambola_games/{gameId}/called_numbers/{numberId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    // ---- Helper functions ----

    /**
     * @description Checks if the user is signed in.
     * @return True if the user is authenticated, false otherwise.
     */
    function isSignedIn() {
      return request.auth != null;
    }
  }
}